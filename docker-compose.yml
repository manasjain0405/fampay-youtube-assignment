version: '3.7'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: vs-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: vs-kafka
    depends_on:
      - zookeeper
    links:
      - zookeeper
    ports:
      - 29092:29092
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: vs-zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.4.0
    container_name: vs-elasticsearch
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - IPC_LOCK
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
      - ./ci/data/es/db:/usr/share/elasticsearch/data
      - ./ci/data/es/logs:/usr/share/elasticsearch/logs
      - ./ci/data/es/repo:/usr/share/elasticsearch/repo
    ports:
      - 9200:9200
      - 9300:9300
    expose:
      - "9200"

  db:
    image: mysql:8.0
    container_name: vs-mysql
    cap_add:
      - SYS_NICE
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=login@root
      - MYSQL_DATABASE=video_details
    ports:
      - "3306:3306"
    volumes:
      - db:/var/lib/mysql
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql

  video-scraper-application:
    image: video-scraper-application:1.0
    container_name: video-scraper-application-container
    restart: always
    ports:
      - "8020:8020"
    links:
      - db
      - kafka
      - elasticsearch
    depends_on:
      - db
      - kafka
      - elasticsearch
    environment:
      YOUTUBE_KEY : "${YOUTUBE_KEY}"

  video-feed-application:
    image: video-feed-application:1.0
    container_name: video-feed-application-container
    restart: always
    ports:
      - "8010:8010"
    links:
      - db
      - kafka
      - elasticsearch
    depends_on:
      - db
      - kafka
      - elasticsearch

volumes:
  db:
    driver: local
  elasticsearch-data:
    driver: local
networks:
  esnet: